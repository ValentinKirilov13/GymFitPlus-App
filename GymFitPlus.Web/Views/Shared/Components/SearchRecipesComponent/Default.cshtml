@model AllRecipesQueryModel

<form asp-controller="Recipe" asp-action="Index" method="get">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-3 form-group">
                <input asp-for="SearchTerm" class="form-style" placeholder="Search">
                <i class="input-icon material-symbols--search"></i>
            </div>
            <div class="col-md-3 form-group">
                <select asp-for="Category" class="form-style" style="color: #ffeba7" aria-required="true">
                    <option disabled selected value="" style="color: #ffffff">Recipe type</option>
                    @foreach (var recipeType in Enum.GetValues(typeof(RecipeType)))
                    {
                        <option style="color: #ffffff" value="@recipeType">@recipeType</option>
                    }
                </select>
                <i class="input-icon ion--body-outline"></i>
            </div>
            <div class="col-md-3 form-group">
                <select asp-for="Sorting" class="form-style" style="color: #ffeba7" aria-required="true">
                    <option disabled selected value="" style="color: #ffffff">Sorting</option>
                    @foreach (var sorting in Enum.GetValues(typeof(Sorting)))
                    {
                        <option style="color: #ffffff" value="@sorting">@sorting</option>
                    }
                </select>
                <i class="input-icon icons8--alphabetical-sorting"></i>
            </div>
        </div>
    </div>
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-3 center-div mb-4">
                <input type="submit" value="Search Recipes" class="btnn search-btnn nav-link d-flex justify-content-center" />
            </div>
        </div>
    </div>
</form>

@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalRecipesCount /
        Model.RecipesPerPage);

    var shouldButtonBeDisabled = Model.CurrentPage == maxPage;
}

<div class="nextPreviousBtn">
    <div class="leftPrevious">
        <div id="targetElementP" class="@(Model.CurrentPage == 1 ? "invisible" : string.Empty)">
            <a class="btn p-0 @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
               asp-controller="Recipe"
               asp-action="Index"
               asp-route-favourite="@Model.IsFavourite"
               asp-route-currentPage="@previousPage"
               asp-route-category="@Model.Category"
               asp-route-searchTerm="@Model.SearchTerm"
               asp-route-sorting="@((int)Model.Sorting)">
                <img id="targetImgP" src="/images/Pagination/PreviousArrow.svg" />
            </a>
        </div>
    </div>
    <div class="rightNext">
        <div id="targetElementN" class="@(shouldButtonBeDisabled ? " invisible" : string.Empty)">
            <a class="btn p-0 @(shouldButtonBeDisabled ? " disabled" : string.Empty)"
               asp-controller="Recipe"
               asp-action="Index"
               asp-route-favourite="@Model.IsFavourite"
               asp-route-currentPage="@(Model.CurrentPage + 1)"
               asp-route-category="@Model.Category"
               asp-route-searchTerm="@Model.SearchTerm"
               asp-route-sorting="@((int)Model.Sorting)">
                <img id="targetImgN" src="/images/Pagination/NextArrow.svg" />
            </a>
        </div>
    </div>
</div>

