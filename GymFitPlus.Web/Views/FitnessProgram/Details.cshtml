@model FitnessProgramDetailViewModel
@{
    ViewBag.Title = Model.Name;
}
@if (ViewBag.Success != null && ViewBag.Success)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <strong>Success!</strong> You successfuly added exercise to @ViewBag.Title.
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<div class="container">
    <div class="row">
        <div class="col-md-4">
            <h1 class="float-end">@Model.Name</h1>
        </div>
        <div class="col-sm-4">
            <button type="button" class="btn bg-transparent border-0" data-bs-toggle="modal" data-bs-target="#ProgramNameModal">
                <i class="fa fa-pencil fa-lg" style="font-size: 30px; color: gray;"></i>
            </button>
        </div>
        <div class="col-md-4">
            <form asp-controller="FitnessProgram" asp-action="Delete" method="post">
                <input asp-for="Id" hidden />
                <input type="submit" class="btn btn-danger float-end" value="Delete" />
            </form>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4"></div>
        <div class="col-md-6">
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">Exercise</th>
                        <th scope="col">Sets</th>
                        <th scope="col">Reps</th>
                        <th scope="col">Weight</th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Exercises.OrderBy(x => x.Order))
                    {
                        string idForModle = $"element{item.FitnessProgramId}{item.ExerciseId}";

                        <tr>
                            <th scope="row">@item.Order</th>
                            <td>@item.ExerciseName</td>
                            <td style="text-align:center">@item.Sets</td>
                            <td style="text-align:center">@item.Reps</td>
                            <td style="text-align:center">@item.Weight</td>
                            <td style="text-align:center">
                                <div class="btn-group dropend">
                                    <button type="button" class="btn btn-sm btn-secondary dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                                        &#8942;
                                    </button>
                                    <ul class="dropdown-menu">
                                        <li>
                                            <button type="button" data-bs-toggle="modal" data-bs-target="#@idForModle" class="dropdown-item">Edit</button>
                                        </li>
                                        <li>
                                            <button class="dropdown-item">Remove</button>
                                        </li>
                                    </ul>
                                </div>
                            </td>
                            <td>
                                <div class="modal fade" id="@idForModle" tabindex="-1" aria-labelledby="EditExerciseLabel" aria-hidden="true">
                                    <div class="modal-dialog modal-dialog-centered">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h1 class="modal-title fs-5">Edit @item.ExerciseName</h1>
                                            </div>
                                            <div class="modal-body">
                                                @await Component.InvokeAsync(
                                                         "EditExerciseInProgramComponent",
                                                         new
                                                         {
                                                             exerciseId = item.ExerciseId,
                                                             programId = item.FitnessProgramId
                                                         })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="6">
                            <div class="d-grid gap-2">
                                <a asp-controller="FitnessProgram"
                                   asp-action="AddExerciseToProgram"
                                   asp-route-programId="@Model.Id" ,
                                   asp-route-exerciseCount="@Model.Exercises.Count()"
                                   class="btn btn-primary">
                                    Add Exercise
                                </a>
                            </div>
                        </td>
                    </tr>
                </tfoot>
            </table>
        </div>
    </div>
</div>
